microformats 2 Â· Microformats Wiki Blog Wiki Discuss Search microformats 2 Jump to: navigation , search Welcome to the microformats2 home page. Contents 1 Summary 1.1 simple microformats 2 examples 1.1.1 person example 1.1.2 hyperlinked person 1.1.3 hyperlinked person image 1.1.4 detailed person example 1.2 microformats2 design 2 v2 vocabularies 2.1 h-adr 2.2 h-card 2.3 h-entry 2.4 h-event 2.5 h-geo 2.6 h-item 2.7 h-product 2.8 h-recipe 2.9 h-resume 2.10 h-review 2.11 h-review-aggregate 2.12 v2 vocab notes 2.13 v2 vocab to-do 3 combining microformats 3.1 h-event location h-card 3.2 h-card org h-card 4 authoring 4.1 minimal markup 4.2 backward compatible 5 validators 6 Examples in the wild 6.1 offline 7 Implementations 7.1 Blogging tools 7.2 Converters 7.3 Parsers 7.3.1 Go 7.3.2 Javascript 7.3.3 PHP 7.3.4 Python 7.3.5 Ruby 8 Presentations 9 Testimonials 10 About This Brainstorm 11 Background 12 Addressing Issues 12.1 AUTHORS and PUBLISHING 12.1.1 can we make the simplest case simpler 12.1.2 renaming for usability 12.1.3 simplifying to only needing one element 12.1.4 flat sets of properties 12.1.5 distinguishing properties from other classes 12.2 COMMUNITY and TOOLS 12.2.1 existing microformats parsing requirements 12.2.2 naming conventions for generic parsing 12.3 ADVANTAGES 12.4 COMPATIBILITY 12.5 VENDOR EXTENSIONS 12.6 USERS 12.7 SEE ALSO Summary Microformats2 is the simplest way to markup structured information in HTML. Microformats2 improves ease of use and implementation for both authors (publishers) and developers ( parser implementers). Microformats2 replaces and supersedes both classic microformats, as well as microdata , and RDFa . simple microformats 2 examples Here are a few simple microformats2 examples along with canonical JSON . person example Simple person reference: <span class = "h-card" > Frances Berriman </span> Parsed JSON: { "items" : [ { "type" : [ "h-card" ] , "properties" : { "name" : [ "Frances Berriman" ] } } ] } hyperlinked person Simple hyperlinked person reference <a class = "h-card" href = "http://benward.me" > Ben Ward </a> Parsed JSON: { "items" : [ { "type" : [ "h-card" ] , "properties" : { "name" : [ "Ben Ward" ] , "url" : [ "http://benward.me" ] } } ] } hyperlinked person image Simple hyperlinked person image <a class = "h-card" href = "http://rohit.khare.org/" > <img alt = "Rohit Khare" src = "https://s3.amazonaws.com/twitter_production/profile_images/53307499/180px-Rohit-sq_bigger.jpg" / > </a> Parsed JSON: { "items" : [ { "type" : [ "h-card" ] , "properties" : { "name" : [ "Rohit Khare" ] , "url" : [ "http://rohit.khare.org" ] , "photo" : [ "https://s3.amazonaws.com/twitter_production/profile_images/53307499/180px-Rohit-sq_bigger.jpg" ] } } ] } Additional simple cases details in microformats-2-implied-properties . detailed person example More detailed person <div class = "h-card" > <img class = "u-photo" alt = "photo of Mitchell" src = "https://webfwd.org/content/about-experts/300.mitchellbaker/mentor_mbaker.jpg" / > <a class = "p-name u-url" href = "http://blog.lizardwrangler.com/" > Mitchell Baker </a> ( <a class = "u-url" href = "https://twitter.com/MitchellBaker" > @MitchellBaker </a> ) <span class = "p-org" > Mozilla Foundation </span> <p class = "p-note" > Mitchell is responsible for setting the direction and scope of the Mozilla Foundation and its activities. </p> <span class = "p-category" > Strategy </span> <span class = "p-category" > Leadership </span> </div> Parsed JSON: { "items" : [ { "type" : [ "h-card" ] , "properties" : { "photo" : [ "https://webfwd.org/content/about-experts/300.mitchellbaker/mentor_mbaker.jpg" ] , "name" : [ "Mitchell Baker" ] , "url" : [ "http://blog.lizardwrangler.com/" , "https://twitter.com/MitchellBaker" ] , "org" : [ "Mozilla Foundation" ] , "note" : [ "Mitchell is responsible for setting the direction and scope of the Mozilla Foundation and its activities." ] , "category" : [ "Strategy" , "Leadership" ] } } ] } Notes: The JSON "type" uses the full microformat root class name (e.g. "h-card" ) for consistent identification. all properties are optional and syntactically plural with parsed values provided in document order; particular microformats (and applications there-of) may apply specific/singular semantics to first value of a property. microformats2 design microformats2 has the following key design aspects: Prefixes for class names. Class names used for microformats use prefixes that start with with 'h-' 'p-' 'u-' 'dt-', 'e-' . These are syntax independent from vocabularies , which can then be developed separately. 'h-*' for root class names, e.g. 'h-card' 'p-*' for simple (text) properties, e.g. 'p-name' 'u-*' for URL properties, e.g. 'u-photo' 'dt-*' for date/time properties, e.g. 'dt-bday' 'e-*' for embedded markup properties, e.g. 'e-note'. See prefix naming conventions for more details. Flat sets of optional properties. All microformats consist of a root, and a collection of properties. Hierarchical data is represented with nested microformats, typically as property values themselves. Properties are all optional and potentially multivalued (applications needing a singular semantic may use first instance). Single class markup for common uses. Common simple markup patterns require only a single microformat root class name, which parsers use to find a few generic properties: name, url, photo . The simple microformats2 examples above demonstrate these. Parsing details for each of these (including how to generate canonical JSON) are specified step-by-step in the: microformats2 parsing specification v2 vocabularies Status: draft . Please review and provide feedback in IRC . h-adr h-card h-entry h-event h-feed h-geo h-item h-listing h-product h-recipe h-resume h-review h-review-aggregate See below for vocabulary summaries. h-adr Main article: h-adr The h-adr microformat is for marking up structured locations such as addresses, physical and/or postal. This is an update to adr . root class name: h-adr profile/itemtype: http://microformats.org/profile/h-adr properties: p-post-office-box p-extended-address p-street-address p-locality p-region p-postal-code p-country-name p-label - new in vCard4 ( RFC6350 ) p-geo (or u-geo with a RFC 5870 geo: URL) - new in vCard4 ( RFC6350 ) p-latitude - new in vCard4 ( RFC6350 from RFC 5870 ) p-longitude - new in vCard4 ( RFC6350 from RFC 5870 ) p-altitude - new in vCard4 ( RFC6350 from RFC 5870 ) For backward compatibility, microformats 2 parsers SHOULD detect the following root class name and property names. A microformats 2 parser may use existing microformats parsers to extract these properties. If an "h-adr" is found, don't look for an "adr" on the same element. compat root class name: adr properties: (parsed as p- plain text unless otherwise specified) post-office-box extended-address street-address locality region postal-code country-name h-card Main article: h-card The h-card microformat is for marking up people and organizations. This is an update to hCard . root class name: h-card profile/itemtype: http://microformats.org/profile/h-card properties: p-name p-honorific-prefix p-given-name p-additional-name p-family-name p-sort-string p-honorific-suffix p-nickname u-email u-logo u-photo u-url u-uid p-category p-adr p-post-office-box p-extended-address p-street-address p-locality p-region p-postal-code p-country-name p-label p-geo or u-geo with a RFC 5870 geo: URL, new in vCard4 ( RFC6350 ) p-latitude p-longitude p-altitude - new in vCard4 ( RFC6350 from RFC 5870 ) p-tel p-note dt-bday u-key p-org p-job-title - previously 'title' in hCard, disambiguated. p-role u-impp per RFC 4770 , new in vCard4 ( RFC6350 ) p-sex new in vCard4 ( RFC6350 ) p-gender-identity new in vCard4 ( RFC6350 ) dt-anniversary new in vCard4 ( RFC6350 ) ... Reserved properties: (properties not used much (if at all) in practice) p-organization-name p-organization-unit p-tz dt-rev ... For backward compatibility, microformats 2 parsers SHOULD detect the following root class name and property names. A microformats 2 parser may use existing microformats parsers to extract these properties. If an "h-card" is found, don't look for a "vcard" on the same element. compat root class name: vcard properties: (parsed as p- plain text unless otherwise specified) fn - parse as p-name honorific-prefix given-name additional-name family-name honorific-suffix nickname email - parse as u- logo - parse as u- photo - parse as u- url - parse as u- uid - parse as u- category adr - parse as p-adr h-adr including compat root class adr extended-address street-address locality region postal-code country-name label geo - parse as p-geo h-geo including compat root class geo latitude longitude tel note bday - parse as dt- key - parse as u- org organization-name organization-unit title - parse as p-job-title role ... Reserved: (backward compat properties that parsers MAY implement, if they do, they MUST implement in this way: tz rev - parse as dt- ... Note: use of 'value' within 'tel' should be automatically handled by the support of the value-class-pattern . And for now, the 'type' subproperty of 'tel' is dropped/ignored. If there is demonstrable documented need for additional tel types (e.g. fax), we can introduce new flat properties as needed (e.g. p-tel-fax). h-entry Main article: h-entry The h-entry microformat is for marking up syndicatable content such as blog posts, notes, articles, comments, photos and similar. This is an update to hAtom . root class name: h-entry profile/itemtype: http://microformats.org/profile/h-entry properties: p-name (was p-entry-title, see issues) p-summary (was p-entry-summary, see issues) e-content (was e-entry-content, see issues) dt-published dt-updated p-author p-category u-url u-uid p-geo p-latitude p-longitude This is an update to hAtom . Brainstorming: The following properties are proposed additions to h-entry above and beyond what hAtom (or Atom) provides, based on various existing link preview markup conventions: u-photo u-audio - consider special u- parsing rules for <audio> u-video - consider special u- parsing rules for <video> u-in-reply-to - for links to other posts that this post is a reply to (comment regarding, etc.) Backward compatibility: (*)hAtom-specific implementations that perform custom display or translation (e.g. to Atom XML) SHOULD prefer p-name over p-entry-title , and use p-entry-title value(s) as a fallback if there is no p-name . For hAtom backward compatibility, microformats 2 parsers SHOULD detect the following root class name and property names. A microformats 2 parser may use existing microformats parsers to extract these properties. If an "h-entry" is found, don't look for a "hentry" on the same element. compat root class name: hentry properties: (parsed as p- plain text unless otherwise specified) entry-title - parse as p-name entry-summary entry-content - parse as e- published - parse as dt- updated - parse as dt- author - including compat root vcard in the absence of h-card category geo - parse as p-geo h-geo including compat root geo latitude longitude ... FAQ: What is the p-name of a note ? A few options, from simplest to most detailed. same as the p-content/e-content property. same as the title element on the note permalink post page. When publishing a note on its own permalink post page, the contents of the note are likely abbreviated for the title of the page. The same abbreviation can be used for the p-name. first sentence of the p-content/e-content property. It may be better for syndication and link-preview purposes to provide just the first sentence of the note as the p-name . Similarly if only a portion of the content is syndicated to other sites, that portion can be marked up as the p-summary . ... Resolved Issues: 2012-245 Resolved. See 2012-243 IRC discussion/consensus for: Use p-summary instead of p-entry-summary . The historical semantic of "entry-summary" is not different from "summary" in any significant (or discernible way). Collapsing the two will simplify the overall microformats2 vocabularies further. In microformats2, entry-summary is no more. Use e-content instead of e-entry-content . Same point and advantage. In microformats2, entry-content is no more. drop p-entry-title . Unnecessary and subsumed by "p-name". Would consider move to backward compat only if cases are presented - known publishing uses are expected to be updated shortly. h-event Main article: h-event The h-event microformat is for marking up events. This is an update to hCalendar . root class name: h-event profile/itemtype: http://microformats.org/profile/h-event properties: p-name p-summary (*) dt-start dt-end dt-duration p-description u-url p-category p-location p-geo p-latitude p-longitude ... This is an update to hCalendar . (*)hCalendar-specific implementations that perform custom display or translation (e.g. to iCalendar .ics) SHOULD prefer p-name over p-summary , and use p-summary value(s) as a fallback if there is no p-name . For backward compatibility, microformats 2 parsers SHOULD detect the following root class name and property names. A microformats 2 parser may use existing microformats parsers to extract these properties. If an "h-event" is found, don't look for a "vevent" on the same element. compat root class name: vevent properties: (parsed as p- plain text unless otherwise specified) summary - parse as p-name dtstart - parse as dt-start dtend - parse as dt-end duration - parse as dt-duration description url - parse as u- category location - including compat root vcard in the absence of h-card , and compat root adr in the absence of h-adr geo - parse as p-geo h-geo including compat root geo latitude longitude ... h-geo Main article: h-geo The h-geo microformat is for marking up WGS84 geophysical coordinates. This is an update to geo . root class name: h-geo profile/itemtype: http://microformats.org/profile/h-geo properties: p-latitude p-longitude p-altitude - new in vCard4 ( RFC6350 from RFC 5870 ) For backward compatibility, microformats 2 parsers SHOULD detect the following root class name and property names. A microformats 2 parser may use existing microformats parsers to extract these properties. If an "h-geo" is found, don't look for an "geo" on the same element. compat root class name: geo properties: (parsed as p- plain text unless otherwise specified) latitude longitude h-item Main article: h-item The h-item microformat is for marking up the item of an h-review or h-product . This is an update to part of hReview . root class name: h-item profile/itemtype: http://microformats.org/profile/h-item properties: p-name u-photo u-url Note: in practice, due to the microformats2 implied property rules, it is expected that most uses of "h-item" won't require any explicit properties at all (since microformats2 parsers will infer name, photo, and url properties from the structure of the element with "h-item" and its contained content/elements if any). h-product Main article: h-product The h-product microformat is for marking up products. This is an update to hProduct . root class name: h-product profile/itemtype: http://microformats.org/profile/h-product properties: p-name - name of the product u-photo - photo of the product p-brand - manufacturer, can also be a nested h-card p-category - freeform categories or tags applied to the item by the reviewer e-description u-url - URL of the product u-identifier - includes type (e.g. mpn, upc, isbn, issn, sn, vin, sku etc.) and value. p-review - a review of the product, can also be a nested h-review p-price - retail price of the product For backward compatibility, microformats 2 parsers SHOULD detect the following root class name and property names. A microformats 2 parser may use existing microformats parsers to extract these properties. If an "h-product" is found, don't look for an "hproduct" on the same element. compat root class name: hproduct properties: (parsed as p- plain text unless otherwise specified) fn - parse as p-name photo - parse as u- brand category description identifier - parse as u- url - parse as u- review - including compat root class hreview in the absence of h-review price Note: hProduct has at least one experimental property which has real world adoption due to Google and Bing search support of hProduct. Currently this is: price h-recipe Main article: h-recipe The h-recipe microformat is for marking up food recipes. This is an update to hRecipe . root class name: h-recipe profile/itemtype: http://microformats.org/profile/h-recipe properties: p-name - the name of the recipe p-ingredient - describes one or more ingredients used in the recipe. p-yield - Specifies the quantity produced by the recipe, like how many persons it satisfyies e-instructions - the method of the recipe. dt-duration - the time it takes to prepare the meal described by the recipe. u-photo - an accompanying image Experimental properties with wide adoption p-summary - provides a short summary or introduction p-author - the person who wrote the recipe with h-card dt-published - the date the recipe was published p-nutrition - nutritional information like calories, fat, dietary fiber etc. ... For backward compatibility, microformats 2 parsers SHOULD detect the following root class name and property names. A microformats 2 parser may use existing microformats parsers to extract these properties. If an "h-recipe" is found, don't look for an "hrecipe" on the same element. compat root class name: hrecipe properties: (parsed as p- plain text unless otherwise specified) fn - parse as p-name ingredient yield instructions - parse as e- duration - parse as dt- photo - parse as u- summary author - including compat root vcard in the absence of h-card nutrition Note: hRecipe has a number of experimental properties which have real world adoption due to Google recipe search support of hRecipe. These are: summary, author, published and nutrition h-resume Main article: h-resume The h-resume microformat is for marking up resumes. This is an update to hResume . root class name: h-resume profile/itemtype: http://microformats.org/profile/h-resume properties: p-summary - overview of qualifications and objectives p-contact - current contact info in an h-card p-education - an education h-calendar event, years, nested h-card of the school, location. p-experience - a job or other professional experience h-calendar event, years, nested h-card of the organization, location, job-title. p-skill - a skill or ability, optionally including level and/or duration of experience p-affiliation - an affiliation with an h-card organization For backward compatibility, microformats 2 parsers SHOULD detect the following root class name and property names. A microformats 2 parser may use existing microformats parsers to extract these properties. If an "h-resume" is found, don't look for an "hresume" on the same element. compat root class name: hresume properties: (parsed as p- plain text unless otherwise specified) summary contact - including compat root vcard in the absence of h-card education - including compat root vevent in the absence of h-event experience - including compat root vevent in the absence of h-event skill affiliation - including compat root vcard in the absence of h-card Note: skill has a proposed expansion into competency with explicit summary, rating and/or duration components. Based on existing real world adoption, we should consider an h-competency vocabulary with p-summary, p-rating, and dt-duration properties. h-review Main article: h-review The h-review microformat is for marking up reviews. This is an update to hReview . See also h-item . root class name: h-review profile/itemtype: http://microformats.org/profile/h-review properties: p-name - name of the review p-item - thing been reviewed i.e. business or person (h-card), event (h-event), place (h-adr or h-geo), product (h-product), website, url, or other item ( h-item ). p-reviewer - person who authored the review dt-reviewed - date time of when the review was written p-rating - value from 1-5 indicating a rating for the item (5 best). p-best - define best rating value. can be numerically lower than worst. p-worst - define worst rating value. can be numerically higher than best. e-description - the full text written evaluation and opinion of the reviewer p-category - freeform categories or tags applied to the item by the reviewer u-url - URL of the review For backward compatibility, microformats 2 parsers SHOULD detect the following root class name and property names. A microformats 2 parser may use existing microformats parsers to extract these properties. If an "h-review" is found, don't look for an "hreview" on the same element. compat root class name: hreview properties: (parsed as p- plain text unless otherwise specified) summary parse as p-name fn - parse as p-name of the item being reviewed (p-item h-item p-name) photo - parse as u-photo of the item being reviewed (p-item h-item u-photo) url - parse as u-url of the item being reviewed (p-item h-item u-url) reviewer - including compat root vcard in the absence of h-card dtreviewed - parse as dt- rating best worst description - parse as e- rel="tag" - parse as p-category rel="self bookmark" - parse as u-url . note that rel attribute value is treated as a space separated set, thus any presence of "self" and "bookmark" within such a set in a rel value is accepted. Note: The hReview format has three properties which make use of rel attribute, these are tag , permalink (via the self and bookmark values) and license . Microformats 2 parsers SHOULD map these URLs into the page scoped rel collection. h-review-aggregate Main article: h-review-aggregate The h-review-aggregate microformat is for marking up aggregate reviews of a single item. This is an update to hreview-aggregate . See also h-item . root class name: h-review-aggregate profile/itemtype: http://microformats.org/profile/h-review-aggregate properties: p-name - name of the review p-item - thing been reviewed i.e. business or person (h-card), event (h-event), place (h-adr or h-geo), product (h-product), website, url, or other item (h-item). p-rating - value from 1-5 indicating average rating for the item (5 best). p-best - define best rating value. can be numerically lower than worst. p-worst - define worst rating value. can be numerically higher than best. p-count - number of reviews aggregated. p-